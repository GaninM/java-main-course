openapi: 3.0.3
info:
  title: User task service
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: User
  - name: Task

paths:
  /api/v1/user:
    post:
      tags:
        - User
      summary: Создание пользователя
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - User
      summary: Получение данных о пользователях
      operationId: getAllUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
        - User
      summary: Обновление данных пользователя
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
  /api/v1/user/{id}:
    get:
      tags:
        - User
      summary: Получение данных о пользователе по ID
      operationId: getUserById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID пользователя
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - User
      summary: Удаление данных о пользователе по ID
      operationId: deleteUserById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID пользователя
      responses:
        '204':
          description: Resource deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
  /api/v1/user/task:
    post:
      tags:
        - User
      summary: Добавление задачи пользователю
      operationId: addTaskToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserTaskRequest'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string

  /api/v1/task:
    post:
      tags:
        - Task
      summary: Создание задачи
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
    get:
      tags:
        - Task
      summary: Получение данных о задачах
      operationId: getAllTasks
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
        - Task
      summary: Обновление данных задачи
      operationId: updateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
  /api/v1/task/{id}:
    get:
      tags:
        - Task
      summary: Получение данных о задаче по ID
      operationId: getTaskById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID задачи
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - Task
      summary: Удаление данных о задаче по ID
      operationId: deleteTaskById
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: ID задачи
      responses:
        '204':
          description: Resource deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Access denied
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                type: string

components:
  schemas:
    User:
      type: object
      description: Пользователь
      required:
        - mail
      properties:
        name:
          type: string
          description: Имя пользователя
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        surname:
          type: string
          description: Фамилия пользователя
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        mail:
          type: string
          description: Имя пользователя
          x-field-extra-annotation: "@jakarta.validation.constraints.Email"

    UserResponse:
      type: object
      description: Пользователь
      allOf:
        - $ref: "#/components/schemas/User"
      properties:
        id:
          type: integer
          format: int64
          description: ID пользователя
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"


    UpdateUserResponse:
      type: object
      description: Пользователь
      allOf:
        - $ref: "#/components/schemas/UserResponse"
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"

    UpdateUserRequest:
      type: object
      description: Запрос на обновление данных пользователя
      properties:
        id:
          type: integer
          format: int64
          description: ID пользователя
      allOf:
        - $ref: "#/components/schemas/User"

    TaskResponse:
      type: object
      description: Задача
      properties:
        id:
          type: integer
          format: int64
          description: ID задачи
        userId:
          type: integer
          format: int64
          description: ID пользователя
        creationDate:
          type: string
          format: date
          description: Дата создания задачи
      allOf:
        - $ref: "#/components/schemas/Task"

    Task:
      type: object
      description: Задача
      properties:
        name:
          type: string
          description: Название задачи
          x-field-extra-annotation: "@jakarta.validation.constraints.NotBlank"
        description:
          type: string
          description: Описание задача
        deadLine:
          type: string
          format: date
          description: Крайний срок выполнения задачи

    UpdateTaskRequest:
      type: object
      description: Запрос на обновление данных пользователя
      properties:
        id:
          type: integer
          format: int64
          description: ID задачи
        userId:
          type: integer
          format: int64
          description: ID пользователя
      allOf:
        - $ref: "#/components/schemas/Task"

    AddUserTaskRequest:
      type: object
      description: Данные для добавления задачи пользователю
      properties:
        userId:
          type: integer
          format: int64
          description: ID пользователя
        taskId:
          type: integer
          format: int64
          description: ID задачи
